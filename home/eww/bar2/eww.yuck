
; Clock
(defpoll clock_time :interval "10s" "date +\%I")
(defpoll clock_minute :interval "5s" "date +\%M")
(defpoll clock_date :interval "10h" "date '+%d/%m'")
(defvar time_rev false)

(defwidget clock_module []
 (eventbox :onhover "${EWW_CMD} update time_rev=true"
 :onhoverlost "${EWW_CMD} eww update time_rev=false"
    (box :class "module" :space-evenly "false" :orientation "h" :spacing "3"
      (label :text clock_time :class "clock_hours" )
      (label :text ":" :class "clock_time_sep" )
      (label :text clock_minute :class "clock_minute_class")
  )))

(defwidget date_module []
  (box :class "module" :space-evenly "false" :orientation "h" :spacing "3"
    (label :text clock_date :class "clock_date")))


;  (revealer :transition "slideleft"
;		  :reveal time_rev
;		  :duration "350ms"
;  (button :class "clock_date_class"
;         :onclick "$HOME/.config/eww/bar/scripts/pop calendar" clock_date
;    ))

(defwidget cal []
	(box :class "cal" :orientation "v"
	(box :class "cal-in"
	(calendar :class "cal"
			  :day calendar_day
			  :year calendar_year))))

(defwindow calendar
	:geometry (geometry :x "-20px"
						:y "7%"
                        :anchor "top right"
						:width "270px"
						:height "60px")
(cal))

(defwidget left []
	(box :orientation "h"
		 :space-evenly false
         :halign "start"
		 :class "right_modules"
))


(defwidget center []
	(box :orientation "h"
		 :space-evenly false
         :halign "center"
		 :class "center_modules"
(clock_module)))

(defwidget right []
	(box :orientation "h"
		 :space-evenly false
         :halign "end"
		 :class "left_modules"
))

(defwidget bar_1 []
  (box :class "bar_class"
       :orientation "h"
  (left)
  (center)
  (right)
    ))

(defwindow bar
          :monitor 0
          :geometry (geometry :x "0%"
                       :y "10px"
                       :width "98%"
                       :height "30px"
                       :anchor "top center")
          :stacking "fg"
          :windowtype "dock"
  (bar_1))
